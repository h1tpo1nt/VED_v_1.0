import pandas as pd
import os
from openpyxl import load_workbook
from openpyxl.utils.dataframe import dataframe_to_rows
from tqdm import tqdm
import shutil

# ======================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—É—Ç–µ–π –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
# ======================================
input_file = "/content/VED/Input/31 –≥—Ä—É–ø–ø–∞ 2023-2024.xlsx" # –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
target_folder = "/content/VED/Target_files"                # –®–∞–±–ª–æ–Ω—ã —Ñ–∞–π–ª–æ–≤
output_folder = "/content/VED/Output"                      # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã

# –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–¥–æ–≤ –¢–ù –í–≠–î ‚Üí —Ñ–∞–π–ª
code_mapping = {
    "2834210000": "01_–ö–∞–ª–∏–µ–≤–∞—è —Å–µ–ª–∏—Ç—Ä–∞.xlsx",
    "2915120000": "02_–§–æ—Ä–º–∏–∞—Ç—ã.xlsx",
    "3102600000": "03_–ù–∏—Ç—Ä–∞—Ç –∫–∞–ª—å—Ü–∏—è.xlsx",
    "3102900000": "03_–ù–∏—Ç—Ä–∞—Ç –∫–∞–ª—å—Ü–∏—è.xlsx",
    "3105902000": "03_–ù–∏—Ç—Ä–∞—Ç –∫–∞–ª—å—Ü–∏—è.xlsx",
    "2834298000": "03_–ù–∏—Ç—Ä–∞—Ç –∫–∞–ª—å—Ü–∏—è.xlsx",
    "3102500000": "05_–ù–∏—Ç—Ä–∏—Ç –Ω–∞—Ç—Ä–∏—è.xlsx",
    "2834100000": "05_–ù–∏—Ç—Ä–∏—Ç –Ω–∞—Ç—Ä–∏—è.xlsx",
    "3105400000": "06_–ú–ê–§.xlsx",
    "3105100000": "07_NPK(S) –í–†–£.xlsx",
    "3105200000": "07_NPK(S) –í–†–£.xlsx",
    "3105201000": "07_NPK(S) –í–†–£.xlsx",
    "3105209000": "07_NPK(S) –í–†–£.xlsx",
    "3105510000": "07_NPK(S) –í–†–£.xlsx",
    "3105590000": "07_NPK(S) –í–†–£.xlsx",
    "3105600000": "07_NPK(S) –í–†–£.xlsx",
    "3105908000": "07_NPK(S) –í–†–£.xlsx",
    "3105909100": "07_NPK(S) –í–†–£.xlsx",
    "3105909900": "07_NPK(S) –í–†–£.xlsx",
    "2833210000": "08_–°—É–ª—å—Ñ–∞—Ç –º–∞–≥–Ω–∏—è.xlsx",
    "2835240000": "09_–ú–æ–Ω–æ–∫–∞–ª–∏–π—Ñ–æ—Å—Ñ–∞—Ç.xlsx",
    "3105100": "–≠–∫—Å–ø–æ—Ä—Ç NPK –í–†–£.xlsx",
    "3105200": "–≠–∫—Å–ø–æ—Ä—Ç NPK –í–†–£.xlsx",
    "3105201": "–≠–∫—Å–ø–æ—Ä—Ç NPK –í–†–£.xlsx",
    "3105209": "–≠–∫—Å–ø–æ—Ä—Ç NPK –í–†–£.xlsx",
    "3105908": "–≠–∫—Å–ø–æ—Ä—Ç NPK –í–†–£.xlsx",
    "3105400001": "–≠–∫—Å–ø–æ—Ä—Ç –ú–ê–§ 12-61.xlsx",
}

# –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –ª–∏—Å—Ç–æ–≤
sheet_mapping = {
    "01_–ö–∞–ª–∏–µ–≤–∞—è —Å–µ–ª–∏—Ç—Ä–∞.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "02_–§–æ—Ä–º–∏–∞—Ç—ã.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "03_–ù–∏—Ç—Ä–∞—Ç –∫–∞–ª—å—Ü–∏—è.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "05_–ù–∏—Ç—Ä–∏—Ç –Ω–∞—Ç—Ä–∏—è.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "06_–ú–ê–§.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "07_NPK(S) –í–†–£.xlsx": ["–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—ä–µ–º–æ–≤", "–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ü–µ–Ω"],
    "08_–°—É–ª—å—Ñ–∞—Ç –º–∞–≥–Ω–∏—è.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "09_–ú–æ–Ω–æ–∫–∞–ª–∏–π—Ñ–æ—Å—Ñ–∞—Ç.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "–≠–∫—Å–ø–æ—Ä—Ç NPK –í–†–£.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "–≠–∫—Å–ø–æ—Ä—Ç –ú–ê–§ 12-61.xlsx": ["–î–∞–Ω–Ω—ã–µ"],
    "–≠–∫—Å–ø–æ—Ä—Ç –ú–æ–Ω–æ–∫–∞–ª–∏–π—Ñ–æ—Å—Ñ–∞—Ç–∞.xlsx": ["–õ–∏—Å—Ç1"],
    "–≠–∫—Å–ø–æ—Ä—Ç –°—É–ª—å—Ñ–∞—Ç–∞ –º–∞–≥–Ω–∏—è.xlsx": ["–î–∞–Ω–Ω—ã–µ"]
}


def get_sheet_columns(filename, sheet_name):
    #–ü–æ–ª—É—á–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ Excel
    try:
        df = pd.read_excel(filename, sheet_name=sheet_name, nrows=0)
        return df.columns.tolist()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏–∑ '{filename}', –ª–∏—Å—Ç '{sheet_name}': {e}")
        return []


def append_df_to_excel(filename, df, sheet_name='Sheet1'):
    #–î–æ–±–∞–≤–ª—è–µ—Ç DataFrame –≤ –∫–æ–Ω–µ—Ü —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ Excel
    if os.path.exists(filename):
        book = load_workbook(filename)
        if sheet_name in book.sheetnames:
            ws = book[sheet_name]
        else:
            ws = book.create_sheet(sheet_name)
    else:
        from openpyxl import Workbook
        book = Workbook()
        book.remove(book.active)
        ws = book.create_sheet(sheet_name)

    old_max_row = ws.max_row

    print(f"\nüìÑ –§–∞–π–ª: {filename}, –õ–∏—Å—Ç: {sheet_name}")
    print(f"üìè –°—Ç–∞—Ä—ã–π —Ä–∞–∑–º–µ—Ä: {old_max_row} —Å—Ç—Ä–æ–∫")
    print(f"üÜï –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä: {len(df)} —Å—Ç—Ä–æ–∫")
    print(f"üßÆ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {old_max_row + len(df)} —Å—Ç—Ä–æ–∫")

    startrow = old_max_row + 1

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π
    if old_max_row == 0 and not df.empty:
        for col_idx, col_name in enumerate(df.columns, 1):
            ws.cell(row=startrow, column=col_idx, value=col_name)
        startrow += 1

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    for row in dataframe_to_rows(df, index=False, header=False):
        for c_idx, value in enumerate(row, 1):
            ws.cell(row=startrow, column=c_idx, value=value)
        startrow += 1

    book.save(filename)


def process_data():
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    if not os.path.exists(input_file):
        print(f"‚ùå –û—à–∏–±–∫–∞: –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {input_file}")
        return

    os.makedirs(output_folder, exist_ok=True)
    print(f"üîπ –ü–∞–ø–∫–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {output_folder}")

    # 2. –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    source_df = pd.read_excel(input_file)
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª. –ó–∞–ø–∏—Å–µ–π: {len(source_df)}")

    if 'G33 (–∫–æ–¥ —Ç–æ–≤–∞—Ä–∞ –ø–æ –¢–ù –í–≠–î –†–§)' not in source_df.columns:
        print("‚ùå –í —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–æ–Ω–∫–∞ 'G33 (–∫–æ–¥ —Ç–æ–≤–∞—Ä–∞ –ø–æ –¢–ù –í–≠–î –†–§)'")
        return

    # 3. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    results = {}  # <-- –û–±—ä—è–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏

    for filename, sheet_names in sheet_mapping.items():
        target_path = os.path.join(target_folder, filename)
        output_path = os.path.join(output_folder, filename)

        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –∏–∑ Target –≤ Output, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
        if not os.path.exists(output_path) and os.path.exists(target_path):
            shutil.copy(target_path, output_path)

        # –ß–∏—Ç–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–∑ —Ü–µ–ª–µ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        sheet_columns = {}
        for sheet in sheet_names:
            cols = get_sheet_columns(output_path, sheet)
            sheet_columns[sheet] = cols

        # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ code_mapping
        matched_codes = [k for k, v in code_mapping.items() if v == filename]
        file_data = source_df[source_df['G33 (–∫–æ–¥ —Ç–æ–≤–∞—Ä–∞ –ø–æ –¢–ù –í–≠–î –†–§)'].astype(str).isin(matched_codes)]

        if not file_data.empty:
            results[output_path] = {'sheet_columns': sheet_columns, 'data': file_data}

    # 4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –ª–∏—Å—Ç—ã
    for output_path, data_info in results.items():
        sheet_columns = data_info['sheet_columns']
        full_data = data_info['data']

        matched_codes = [k for k, v in code_mapping.items() if v == os.path.basename(output_path)]

        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {os.path.basename(output_path)}:")
        total_rows = 0

        for sheet_name, columns in sheet_columns.items():
            # –§–æ—Ä–º–∏—Ä—É–µ–º DataFrame —Å —Ç–µ–º –∂–µ –ø–æ—Ä—è–¥–∫–æ–º –∫–æ–ª–æ–Ω–æ–∫, –∫–∞–∫ –≤ —à–∞–±–ª–æ–Ω–µ
            filtered_data = pd.DataFrame()

            for col in columns:
                if col in source_df.columns:
                    filtered_data[col] = full_data[col]
                else:
                    filtered_data[col] = None  # –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é –∫–æ–ª–æ–Ω–∫—É

            if not filtered_data.empty:
                append_df_to_excel(output_path, filtered_data, sheet_name=sheet_name)
                total_rows += len(filtered_data)

                print(f"üìå –õ–∏—Å—Ç '{sheet_name}'")
                print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(filtered_data)}")
                missing_cols = [col for col in columns if col not in source_df.columns]
                if missing_cols:
                    print(f"   ‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ input: {missing_cols}")

        print(f"üì¶ –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {total_rows}")
        matched_codes_str = "', '".join(matched_codes)
        print(f"üè∑Ô∏è  –ü–æ –∫–æ–¥–∞–º –¢–ù –í–≠–î: '{matched_codes_str}'")
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Ñ–∞–π–ª: {os.path.basename(output_path)}")

    print("\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    process_data()
